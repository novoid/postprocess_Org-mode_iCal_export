## Time-stamp: <2015-05-14 16:09:32 vk>
## -*- coding: utf-8 -*-
## This file is best viewed with GNU Emacs Org-mode: http://orgmode.org/

* postprocess_Org-mode_iCal_export.py

This Python script converts a given [[https://en.wikipedia.org/wiki/ICalendar][iCalendar]] file generated by Emacs
[[http://orgmode.org][Org-mode]].  

Entries whose UIDs is identical to already known UIDs are omitted.
Also omitted are entries whose DTEND date is in the past.

If the tag defined in PRIVATE_TAG is found, description, summary, and
location gets replaced with PRIVATE_SUMMARY as summary.

Additionally, if REMINDER_REGEX finds reminders in tags, a Google
Calendar reminder (VALARM) is added.

With the optional parameter ~--remove-summary-timestamp~, time-stamps
in summary lines get removed in order to get a better overview (narrow
columns).

The command line parameter ~--obfuscate~ clears summary lines, tags,
and categories in order to get simple free/busy-iCalendar files to
maintain privacy.

Source: https://github.com/novoid/postprocess_Org-mode_iCal_export

- *target group*: Privacy-concerned users of [[http://orgmode.org][Org-mode]] who want to
  publish their Agenda using iCalendar format online
- *skills necessary*: adding some minor Emacs settings

** Why

A common use case: generate iCalendar files with [[http://orgmode.org][Org-mode]] using its
[[http://orgmode.org/manual/iCalendar-export.html][iCalendar-export]] for [[http://orgmode.org/worg/org-tutorials/org-google-sync.html][Google Calendar synchronization]]. Since Org-mode
iCalendar export does not support ~VALARM~ reminders (yet), I add them
using this script.

** Example

I am using this method to (manually) export my agenda for the next 60
days followed by script invocation in a shell:

: ;; ######################################################
: (defun my-export-agenda()
:   "Exports monthly Org-mode agenda to agenda.ics file"
:   (interactive)
:   (org-agenda-list nil nil 60)
:   (org-agenda-write "~/share/all/org-mode/org-export.ics")
:   (setq scriptpath "~/src/postprocess_Org-mode_iCal_export/")
:   (setq icspath "~/share/all/org-mode/")
:   (shell-command-to-string (concat 
: 			    scriptpath "postprocess_Org-mode_iCal_export.py "
: 			    "-i " icspath "org-export.ics "
: 			    "-o " icspath "agenda.ics "
: 			    "--overwrite"
:			    "--remove-summary-timestamp"
: 			    )
: 			   )
:   )

The resulting ~agenda.ics~ could be put on a webspace where Google
Calendar is reading it periodically. This way, the calendar data and
its reminders are visible online (and on the Android phone).

With 2013-12, I switched my workflow: I periodically re-generate my
ageda using ~my-export-agenda~ from above, synchronize ~agenda.ics~
using [[https://play.google.com/store/apps/details?id%3Deu.kowalczuk.rsync4android&hl%3Den][rsync backup for Android]] onto my phone, and use [[https://play.google.com/store/apps/details?id%3Dtk.drlue.icalimportexport][iCal
Import/Export 2.0]] to import the data to a local (non-synchronized)
calendar. This way, I avoid putting my calendar data into the cloud
and keep my privacy.

** Advantages

- adds a very flexible reminder feature to your Org-mode export
- more fine-grained control on what information is published and what
  not (using privacy tag)

* Contribute!

I am looking for your ideas:

If you want to contribute to this cool project, please fork and
contribute!


* Local Variables                                                  :noexport:
# Local Variables:
# mode: auto-fill
# mode: flyspell
# eval: (ispell-change-dictionary "en_US")
# End:
